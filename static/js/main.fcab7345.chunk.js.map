{"version":3,"sources":["components/Styled/StyledButton.js","components/Styled/DisplayFlex.js","theme/globalStyle.js","theme/theme.js","components/Styled/LoginButton.js","components/NavBar/index.js","components/Main.js/index.js","images/logo.svg","components/PWA_InstallButton/index.js","components/__Pages/0_login.js","App.jsx","components/__Hooks/useLocalStorage.js","reportWebVitals.js","index.js"],"names":["StyledButton","styled","button","props","theme","accent2","DisplayFlex","css","GlobalStyle","createGlobalStyle","bg","fontColor2","themes","light","navBg","menuBg","fontColor1","accent1","notActive","dark","LoginButton","loginWithRedirect","useAuth0","onClick","NavBarButtons","lazy","NavLogo","NavBar","StyledNavBar","fallback","nav","Content","Main","StyledMain","main","InstallPWA","useState","supportsPWA","setSupportsPWA","promptInstall","setPromptInstall","useEffect","handler","e","preventDefault","window","addEventListener","removeEventListener","aria-label","title","evt","prompt","NotAuthenticated","StyledLogin","StyledSVG","src","logo","alt","className","Authenticated","div","SVG","UserContext","createContext","CheckAuthenticated","isAuthenticated","App","children","patient","setPatient","useLocalStorage","setTheme","isLoading","Provider","value","changeTheme","key","initialValue","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","root","document","getElementById","ReactDOM","render","domain","clientId","redirectUri","location","origin"],"mappings":"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","file":"static/js/main.fcab7345.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n  height: 40px;\r\n  width: 150px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  color: #f5f5f5;\r\n  background-color: ${(props) => props.theme.accent2};\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\r\n`;\r\n","import { css } from \"styled-components\";\r\n\r\nexport const DisplayFlex = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  user-select: none;\r\n  -webkit-touch-callout: none;\r\n  }\r\n\r\nbody {\r\n  position: relative;\r\n  width: 100%;\r\n  background: ${(props) => props.theme.bg};\r\n  color: ${(props) => props.theme.fontColor2};\r\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  transition: 0.2s cubic-bezier(0.3, 0, 0.5, 1);\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\nbody, html {\r\n  overscroll-behavior-y: contain;\r\n  overflow-x: hidden!important;\r\n}\r\n\r\n*::-webkit-scrollbar {\r\n  scrollbar-width: none;  \r\n  display: none;\r\n  }\r\n`;\r\n","const LightTheme = {\r\n  bg: \"#f5f5f5\",\r\n  navBg: \"#ffffff\",\r\n  menuBg: \"#333333af\",\r\n  fontColor1: \"#f5f5f5\",\r\n  fontColor2: \"#333333\",\r\n  accent1: \"#49C6E5\",\r\n  accent2: \"#51ADE2\",\r\n  notActive: \"#aaaaaa\"\r\n};\r\n\r\nconst DarkTheme = {\r\n  bg: \"#243546\",\r\n  navBg: \"#314455\",\r\n  menuBg: \"#f5f5f5af\",\r\n  fontColor1: \"#333333\",\r\n  fontColor2: \"#f5f5f5\",\r\n  accent1: \"#00BD9D\",\r\n  accent2: \"#8BD7D2\",\r\n  notActive: \"#0d1720\"\r\n};\r\n\r\nconst themes = {\r\n  light: LightTheme,\r\n  dark: DarkTheme,\r\n};\r\n\r\nexport default themes;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { StyledButton } from \"./StyledButton\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  return (\r\n    \r\n      <StyledButton onClick={loginWithRedirect}>Log In</StyledButton>\r\n    \r\n  );\r\n};\r\n\r\nexport default LoginButton;","import { lazy, Suspense } from \"react\";\r\nimport Sticky from \"react-sticky-el\";\r\nimport styled from \"styled-components\";\r\nconst NavBarButtons = lazy(() => import(\"./NavButtons\"));\r\nconst NavLogo = lazy(() => import(\"./NavLogo\"));\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <StyledNavBar>\r\n      <Suspense fallback={\"\"}>\r\n        <NavLogo />\r\n        <Sticky>\r\n          <NavBarButtons />\r\n        </Sticky>\r\n      </Suspense>\r\n    </StyledNavBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\nconst StyledNavBar = styled.nav`\r\n  background-color: ${(props) => props.theme.navBg};\r\n  height: 90px;\r\n  width: 100vw;\r\n`;\r\n","// That is the component that changes when the uses switches between pages\r\n\r\nimport { lazy, Suspense } from \"react\";\r\nimport styled from \"styled-components\";\r\nconst Content = lazy(() => import(\"../__Router\"));\r\n\r\nconst Main = () => {\r\n  return (\r\n    <StyledMain>\r\n      <Suspense fallback={<div>Loading</div>}>\r\n        <Content />\r\n      </Suspense>\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst StyledMain = styled.main`\r\n  width: 100vw;\r\n  min-height: calc(100vh - 140px);\r\n\r\n  h1 {\r\n    margin: 40px 0 20px;\r\n    height: 50px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.a12f9b50.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport { StyledButton } from \"../Styled/StyledButton\";\r\n\r\nconst InstallPWA = () => {\r\n  const [supportsPWA, setSupportsPWA] = useState(false);\r\n  const [promptInstall, setPromptInstall] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handler = (e) => {\r\n      e.preventDefault();\r\n      setSupportsPWA(true);\r\n      setPromptInstall(e);\r\n    };\r\n    window.addEventListener(\"beforeinstallprompt\", handler);\r\n\r\n    return () => window.removeEventListener(\"transitionend\", handler);\r\n  }, []);\r\n\r\n  const onClick = (evt) => {\r\n    evt.preventDefault();\r\n    if (!promptInstall) {\r\n      return;\r\n    }\r\n    promptInstall.prompt();\r\n  };\r\n  if (!supportsPWA) {\r\n    return null;\r\n  }\r\n  return (\r\n    <StyledButton\r\n      aria-label=\"Install App\"\r\n      title=\"Install App\"\r\n      onClick={onClick}\r\n    >\r\n      Install App\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default InstallPWA;\r\n","//TO-DO ====================================================================================================================\r\n//learn how to use universal login from auth0\r\n//change the login page from auth0 to a custom one with universal login\r\n//lock which users can log in - has to be done in auth0 website\r\n\r\nimport styled from \"styled-components\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport LoginButton from \"../Styled/LoginButton.js\";\r\nimport NavBar from \"../NavBar/index.js\";\r\nimport Main from \"../Main.js\";\r\nimport logo from \"../../images/logo.svg\";\r\nimport { DisplayFlex } from \"../Styled/DisplayFlex.js\";\r\nimport InstallPWA from \"../PWA_InstallButton/index.js\";\r\n\r\nexport const NotAuthenticated = () => {\r\n  return (\r\n    <StyledLogin>\r\n      <StyledSVG src={logo} alt=\"\" />\r\n      <div className=\"buttons\">\r\n        <LoginButton />\r\n        <InstallPWA />\r\n      </div>\r\n    </StyledLogin>\r\n  );\r\n};\r\n\r\nexport const Authenticated = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Main />\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledLogin = styled.div`\r\n  ${DisplayFlex}\r\n  flex-direction: column;\r\n  background: ${(props) => props.theme.bg};\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  .buttons {\r\n    margin-top: 50px;\r\n\r\n    button {\r\n      margin: 0 10px;\r\n      background: ${(props) => props.theme.accent1};\r\n\r\n      @media (max-width: 738px) {\r\n        width: 40vw;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledSVG = styled(SVG)`\r\n  max-width: 80vw;\r\n  width: 350px;\r\n\r\n  & path {\r\n    fill: ${(props) => props.theme.accent1};\r\n  }\r\n`;\r\n","import React, { createContext, useState } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./theme/globalStyle\";\r\nimport themes from \"./theme/theme\";\r\nimport useLocalStorage from \"./components/__Hooks/useLocalStorage\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Authenticated, NotAuthenticated } from \"../src/components/__Pages/0_login\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst CheckAuthenticated = () => {\r\n  const { isAuthenticated } = useAuth0();\r\n  return isAuthenticated ? <Authenticated /> : <NotAuthenticated />;\r\n};\r\n\r\nconst App = ({ children }) => {\r\n  const [patient, setPatient] = useState(\"\");\r\n  const [theme, setTheme] = useLocalStorage(\"theme\", \"light\");\r\n  const changeTheme = () => {\r\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\r\n  };\r\n  const { isLoading } = useAuth0();\r\n  if (isLoading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <ThemeProvider theme={themes[theme]}>\r\n      <GlobalStyle />\r\n      <UserContext.Provider value={{ patient, setPatient, changeTheme }}>\r\n        <CheckAuthenticated>{children}</CheckAuthenticated>\r\n      </UserContext.Provider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useState } from \"react\";\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  const setValue = (value) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","// Web Vitals report for PWA development\r\nconst reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\nimport App from \"./App.jsx\";\r\n\r\nconst root = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain='archianne.eu.auth0.com'\r\n    clientId='9ciI61OkjK0UPi8c8TG0EGUjX6tQHPjq'\r\n    redirectUri={window.location.origin}\r\n  >\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Auth0Provider>,\r\n  root\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}