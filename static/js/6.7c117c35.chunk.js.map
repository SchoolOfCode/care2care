{"version":3,"sources":["components/GetInput/index.js","components/StyledComponent/StyledTitle.js","components/StyledComponent/StyledNoInformation.js","components/MappedLogs/index.js","components/3_DailyLogs/index.jsx"],"names":["GetInput","entry","value","label","onChange","className","readOnly","type","name","placeholder","GetSelect","options","required","disabled","defaultValue","hidden","map","option","GetSummary","item","GetInfo","title","GetSpacedInfo","item2","Title","text","StyledTitle","styled","h1","props","theme","fontColor2","NoInformation","iconClass","StyledNoInformation","Search","div","RowFlexCenter","MappedLogs","context","records","usePaparse","filteredRecord","filter","Patient","includes","patient","mapFiltered","Array","isArray","Records","index","StyledMap","Timestamp","Check","Comments","PostedBy","Email","Job","Job_Title","length","StyledDailyLogs","notActive","accent2","accent1","boxShadow","StyledWrapper","DailyLogs","useState","setRecords","useContext","UserContext","to","e","target","fontColor1","bg"],"mappings":"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","file":"static/js/6.7c117c35.chunk.js","sourcesContent":["export const GetInput = ({\r\n  entry,\r\n  value,\r\n  label,\r\n  onChange,\r\n  className,\r\n  readOnly,\r\n  type\r\n}) => {\r\n  return (\r\n    <input\r\n      type={type || \"text\"}\r\n      name={entry}\r\n      value={value}\r\n      placeholder={label}\r\n      onChange={onChange}\r\n      className={className}\r\n      readOnly={readOnly}\r\n    />\r\n  );\r\n};\r\n\r\nexport const GetSelect = ({ entry, value, onChange, options, label }) => {\r\n  return (\r\n    <select name={entry} value={value} onChange={onChange} required>\r\n      <option value=\"\" disabled defaultValue hidden>\r\n        {label}\r\n      </option>\r\n      {options.map((option) => (\r\n        <option value={option}>{option}</option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport const GetSummary = ({ className, item }) => {\r\n  return (\r\n    <div className={className}>\r\n      <p>{item || \"\"}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const GetInfo = ({ className, item, title }) => {\r\n  return (\r\n    <div className={className}>\r\n      <h4>{title}</h4>\r\n      <p>{item || \"No Information Available\"}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const GetSpacedInfo = ({ className, title, item, item2 }) => {\r\n  return (\r\n    <div className={className}>\r\n      <h4>{title}</h4>\r\n      <span>\r\n        <p>{item || \"No Information Available\"}</p>\r\n        <p>{item2}</p>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const GetFilter = () => {\r\n  return\r\n}","import styled from \"styled-components\";\r\n\r\nconst Title = ({ text }) => {\r\n  return <StyledTitle>{text}</StyledTitle>;\r\n};\r\n\r\nexport default Title;\r\n\r\nconst StyledTitle = styled.h1`\r\n  margin: 40px 0 20px;\r\n  height: 50px;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  color: ${props => props.theme.fontColor2};;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Icons from \"../../theme/icons\";\r\nimport { RowFlexCenter } from \"./StyledDisplay\";\r\n\r\nexport const NoInformation = ({ text, iconClass }) => {\r\n  return (\r\n    <StyledNoInformation>\r\n      <span>{text}</span>\r\n      <Icons.Search className=\"icon\" />\r\n    </StyledNoInformation>\r\n  );\r\n};\r\n\r\nexport default NoInformation;\r\n\r\nconst StyledNoInformation = styled.div`\r\n  ${RowFlexCenter}\r\n  margin-top: 10px;\r\n\r\n  .icon {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport usePaparse from \"../__Hooks/usePaparse\";\r\nimport styled from \"styled-components\";\r\nimport Icons from \"../../theme/icons\";\r\nimport NoInformation from \"../StyledComponent/StyledNoInformation\";\r\n\r\nconst MappedLogs = ({ context, records }) => {\r\n  const URL =\r\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRylb8I0x2LH26SwEXfv7HXfN_91VfLiOlEWxFDWp7VDxiS76XdGIqOoM8nNE9Yx2-dtVR0CyXjpRSh/pub?output=csv\";\r\n\r\n  const [data] = usePaparse(URL);\r\n  const filteredRecord = data.filter((item) =>\r\n    item.Patient.includes(context.patient)\r\n  );\r\n\r\n  const mapFiltered =\r\n    Array.isArray(filteredRecord) &&\r\n    filteredRecord\r\n      .filter((item) => item.Records.includes(records))\r\n      .map((item, index) => {\r\n        return (\r\n          <StyledMap>\r\n            <div className=\"title-time\">\r\n              <p>{item.Timestamp}</p>\r\n              <h3>{item.Records}</h3>\r\n            </div>\r\n\r\n            <div className=\"icon-text\">\r\n              <Icons.Check className=\"icon\" />\r\n              <p>{item.Comments}</p>\r\n            </div>\r\n\r\n            <div className=\"posted-by\">\r\n              <div className=\"icon-text\">\r\n                <Icons.PostedBy className=\"icon\" />\r\n                <p>{item.Email}</p>\r\n              </div>\r\n\r\n              <div className=\"icon-text job\">\r\n                <Icons.Job className=\"icon\" />\r\n                <p>{item.Job_Title}</p>\r\n              </div>\r\n            </div>\r\n          </StyledMap>\r\n        );\r\n      });\r\n\r\n  return (\r\n    <div>\r\n      {mapFiltered.length === 0 ? (\r\n        <NoInformation text={\"No records found\"} />\r\n      ) : (\r\n        <StyledDailyLogs>{mapFiltered}</StyledDailyLogs>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MappedLogs;\r\n\r\nconst StyledMap = styled.div`\r\n  width: 100%;\r\n\r\n  h3 {\r\n    border-top: 1px solid ${(props) => props.theme.notActive};\r\n    color: ${(props) => props.theme.fontColor2};\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .title-time {\r\n    margin-top: 20px;\r\n    p {\r\n      text-align: right;\r\n      color: ${(props) => props.theme.accent2};\r\n      font-weight: bold;\r\n    }\r\n  }\r\n\r\n  .icon-text {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n    font-size: 15px;\r\n    @media (max-width: 738px) {\r\n      font-size: 13px;\r\n    }\r\n\r\n    p {\r\n      width: 90%;\r\n    }\r\n    .icon {\r\n      margin-top: 3px;\r\n      margin-right: 5px;\r\n      color: ${(props) => props.theme.accent1};\r\n    }\r\n  }\r\n\r\n  .posted-by {\r\n    display: flex;\r\n    width: 100%;\r\n    color: ${(props) => props.theme.notActive};\r\n    margin-top: 5px;\r\n\r\n    .job {\r\n      margin-left: 20px;\r\n    }\r\n\r\n    p {\r\n      font-size: 12px;\r\n    }\r\n\r\n    .icon {\r\n      color: ${(props) => props.theme.notActive};\r\n      font-size: 15px;\r\n      margin-top: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledDailyLogs = styled.div`\r\n  box-shadow: ${(props) => props.theme.boxShadow} 0px 3px 6px,\r\n    rgba(0, 0, 0, 0.23) 0px 3px 6px;\r\n  padding: 0 10px 20px;\r\n  width: 90vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto 50px;\r\n  border-radius: 5px;\r\n`;\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { UserContext } from \"../../App.jsx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GetSelect } from \"../GetInput/index.js\";\r\nimport Title from \"../StyledComponent/StyledTitle\";\r\nimport NoInformation from \"../StyledComponent/StyledNoInformation\";\r\nimport MappedLogs from \"../MappedLogs\";\r\nimport { RowFlexCenter } from \"../StyledComponent/StyledDisplay.js\";\r\n\r\nconst DailyLogs = () => {\r\n  const [records, setRecords] = useState(\"\");\r\n  const context = useContext(UserContext);\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <Title text=\"Daily Logs\" />\r\n      <div>\r\n        {!context.patient ? (\r\n          <NoInformation text={\"Please select a patient\"} />\r\n        ) : (\r\n          <div>\r\n            <div className=\"patient-selected\">\r\n              <Link to=\"/patient\">See Profile</Link>\r\n\r\n              <GetSelect\r\n                value={records}\r\n                onChange={(e) => setRecords(e.target.value)}\r\n                label={\"Filter\"}\r\n                options={[\r\n                  \"Wellbeing\",\r\n                  \"Personal Hygiene\",\r\n                  \"Incident and/or Accident\",\r\n                  \"Food and/or Fluids\",\r\n                  \"Output/Elimination\",\r\n                  \"Body mapping\",\r\n                  \"Daily Handover\",\r\n                  \"Medication\",\r\n                  \"Professional visits\",\r\n                  \"Family visits\",\r\n                  \"Statement Care Records\",\r\n                  \"Evaluation\",\r\n                  \"Resident Transfer Form\",\r\n                ]}\r\n              />\r\n            </div>\r\n\r\n            <MappedLogs context={context} records={records} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default DailyLogs;\r\n\r\nconst StyledWrapper = styled.div`\r\n  .patient-selected {\r\n    ${RowFlexCenter};\r\n    justify-content: flex-end;\r\n    width: 95%;\r\n    margin-bottom: 20px;\r\n\r\n    a,\r\n    select {\r\n      text-decoration: none;\r\n      color: ${(props) => props.theme.accent2};\r\n      font-weight: 700;\r\n      padding: 5px 20px;\r\n      cursor: pointer;\r\n      text-align: center;\r\n    }\r\n\r\n    select {\r\n      -webkit-appearance: none;\r\n      -moz-appearance: none;\r\n      appearance: none;\r\n      outline: none;\r\n      border: none;\r\n      background: ${(props) => props.theme.accent2};\r\n      color: ${(props) => props.theme.fontColor1};\r\n      border-radius: 5px;\r\n      width: 90px;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n    }\r\n\r\n    icon-filter {\r\n      font-size: 40px;\r\n    }\r\n\r\n    option {\r\n      text-align: right;\r\n      color: ${(props) => props.theme.fontColor2};\r\n      background: ${(props) => props.theme.bg};\r\n    }\r\n\r\n    option:checked {\r\n      background: ${(props) => props.theme.accent2};\r\n      color: ${(props) => props.theme.fontColor1};\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}