{"version":3,"sources":["components/Styled/NoInformation.js","components/Styled/StyledForm.js","components/AllForms/1_GetRecords.js","components/AllForms/1_GetJob.js","components/AllForms/1_GetPatient.js","components/AllForms/1_GetComments.js","components/__Pages/1_addRecord.js"],"names":["NoInformation","text","StyledNoInformation","styled","div","StyledForm","DisplayFlex","props","theme","notActive","accent1","GetRecords","records","setRecords","name","onChange","e","target","value","required","disabled","defaultValue","hidden","GetJob","job","setJob","GetPatient","context","type","patient","placeholder","readOnly","GetComments","comments","setComments","StyledAddRecord","AddRecord","useContext","UserContext","useState","submitted","setSubmitted","formSubmitted","setFormSubmitted","user","useAuth0","validateForm","alert","FormStatus","useEffect","msgSent","setTimeout","clearTimeout","title","id","style","display","action","method","onSubmit","preventDefault","className","email","StyledButton","p","fontColor2"],"mappings":"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","file":"static/js/8.906c5c41.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst NoInformation = ({ text }) => {\r\n  return (\r\n    <StyledNoInformation>\r\n      <p>{text}</p>\r\n    </StyledNoInformation>\r\n  );\r\n};\r\n\r\nexport default NoInformation;\r\n\r\nconst StyledNoInformation = styled.div`\r\n  text-align: center;\r\n\r\n  p::before {\r\n    content: \"⚠️\";\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DisplayFlex } from \"./DisplayFlex\";\r\n\r\nexport const StyledForm = styled.div`\r\n  ${DisplayFlex}\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  width: 500px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 90vw;\r\n  }\r\n\r\n  button {\r\n    margin: 15px 0;\r\n  }\r\n\r\n  .hidden {\r\n    display: none;\r\n  }\r\n\r\n  input {\r\n    :read-only {\r\n      color: ${(props) => props.theme.notActive};\r\n      cursor: not-allowed;\r\n\r\n      :focus {\r\n        border-bottom: 2px #9b0303 solid;\r\n      }\r\n    }\r\n  }\r\n\r\n  select {\r\n    color: #333;\r\n    cursor: pointer;\r\n    :required:invalid {\r\n      color: gray;\r\n    }\r\n  }\r\n\r\n  option {\r\n    color: #333;\r\n  }\r\n\r\n  input,\r\n  select,\r\n  option {\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    margin-bottom: 15px;\r\n    border: none;\r\n    border-bottom: 1px ${(props) => props.theme.notActive} solid;\r\n    border-radius: 5px 5px 0 0;\r\n    :focus {\r\n      outline: none;\r\n      border-bottom: 2px ${(props) => props.theme.accent1} solid;\r\n    }\r\n  }\r\n`;\r\n","const GetRecords = ({ records, setRecords }) => {\r\n  return (\r\n    <select\r\n      name=\"entry.462237252\"\r\n      onChange={(e) => setRecords(e.target.value)}\r\n      value={records}\r\n      required\r\n    >\r\n      <option value=\"\" disabled defaultValue hidden>\r\n        Records\r\n      </option>\r\n      <option value=\"Wellbeing\">Wellbeing</option>\r\n      <option value=\"Personal Hygiene\">Personal Hygiene</option>\r\n      <option value=\"Incident and/or Accident\">Incident and/or Accident</option>\r\n      <option value=\"Food and/or Fluids\">Food and/or Fluids</option>\r\n      <option value=\"Output/Elimination\">Output/Elimination</option>\r\n      <option value=\"Body mapping\">Body mapping</option>\r\n      <option value=\"Daily Handover\">Daily Handover</option>\r\n      <option value=\"Medication\">Medication</option>\r\n      <option value=\"Professional visits\">Professional visits</option>\r\n      <option value=\"Family visits\">Family visits</option>\r\n      <option value=\"Statement Care Records\">Statement Care Records</option>\r\n      <option value=\"Evaluation\">Evaluation</option>\r\n      <option value=\"Resident Transfer Form\">Resident Transfer Form</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default GetRecords;\r\n","const GetJob = ({ job, setJob }) => {\r\n  return (\r\n    <select\r\n      name=\"entry.31137095\"\r\n      onChange={(e) => setJob(e.target.value)}\r\n      value={job}\r\n      required\r\n    >\r\n      <option value=\"\" disabled defaultValue hidden>\r\n        Job Title [Staff]\r\n      </option>\r\n      <option value=\"Care Assistant\">Care Assistant</option>\r\n      <option value=\"Senior Care Assistant\">Senior Care Assistant</option>\r\n      <option value=\"Manager\">Manager</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default GetJob;\r\n","const GetPatient = ({ context }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"entry.786976050\"\r\n      value={context.patient}\r\n      placeholder=\"Patient not selected\"\r\n      readOnly\r\n    />\r\n  );\r\n};\r\n\r\nexport default GetPatient;\r\n","const GetComments = ({ comments, setComments }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"entry.1817980315\"\r\n      value={comments}\r\n      placeholder={\"Comments\"}\r\n      onChange={(e) => setComments(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GetComments;\r\n","//TO-DO ====================================================================================================================\r\n//add the dropdown to select patient, that is gonna be sent to the form so we can fetch which patient we want to check the records from\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { UserContext } from \"../../App.jsx\";\r\nimport { StyledButton } from \"../Styled/StyledButton\";\r\nimport { StyledForm } from \"../Styled/StyledForm\";\r\nimport GetRecords from \"../AllForms/1_GetRecords.js\";\r\nimport GetJob from \"../AllForms/1_GetJob.js\";\r\nimport GetPatient from \"../AllForms/1_GetPatient.js\";\r\nimport GetComments from \"../AllForms/1_GetComments.js\";\r\nimport NoInformation from \"../Styled/NoInformation.js\";\r\n\r\n// = lazy(() => import(\"\"));\r\nconst AddRecord = () => {\r\n  const context = useContext(UserContext);\r\n  const FORM_ACTION =\r\n    \"https://docs.google.com/forms/u/0/d/e/1FAIpQLSdm4S7YQmIWc0SPJ-nhxMZkbdWQLwAt3wXJYwXfVTsdaHySvQ/formResponse\";\r\n  const [job, setJob] = useState(\"\");\r\n  const [records, setRecords] = useState(\"\");\r\n  const [comments, setComments] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [formSubmitted, setFormSubmitted] = useState(\"\");\r\n  const { user } = useAuth0();\r\n\r\n  const validatePatient = () => {\r\n    return !context.patient ? alert(\"Please select a patient\") : true;\r\n  };\r\n  const validateComments = () => {\r\n    return !comments ? alert(\"Comments can't be blank\") : true;\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (!validateComments() || !validatePatient()) {\r\n      setFormSubmitted(<FormStatus>❌ Form not submitted</FormStatus>);\r\n      return false;\r\n    } else {\r\n      setSubmitted(true);\r\n      setFormSubmitted(<FormStatus>✔️ Form submitted</FormStatus>);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (submitted) {\r\n      setRecords(\"\");\r\n      setJob(\"\");\r\n      setComments(\"\");\r\n      setSubmitted(false);\r\n      const { msgSent } = setTimeout(() => setFormSubmitted(\"\"), 4000);\r\n      return () => {\r\n        clearTimeout(msgSent);\r\n      };\r\n    } else {\r\n      const { msgSent } = setTimeout(() => setFormSubmitted(\"\"), 4000);\r\n      return () => {\r\n        clearTimeout(msgSent);\r\n      };\r\n    }\r\n  }, [submitted]);\r\n\r\n  return (\r\n    <StyledAddRecord>\r\n      <h1>ADD RECORD</h1>\r\n      {!context.patient ? (\r\n        <NoInformation text={\"No patient selected\"} />\r\n      ) : (\r\n        <StyledForm>\r\n          <iframe\r\n            title=\"hidden_iframe\"\r\n            name=\"hidden_iframe\"\r\n            id=\"hidden_iframe\"\r\n            style={{ display: \"none\" }}\r\n          ></iframe>\r\n\r\n          <form\r\n            action={FORM_ACTION}\r\n            method=\"post\"\r\n            target=\"hidden_iframe\"\r\n            onSubmit={(e) => {\r\n              validateForm();\r\n              if (!validateForm()) {\r\n                e.preventDefault();\r\n              }\r\n            }}\r\n          >\r\n            <GetPatient context={context} />\r\n            <GetJob job={job} setJob={setJob} />\r\n            <GetRecords records={records} setRecords={setRecords} />\r\n            <GetComments comments={comments} setComments={setComments} />\r\n\r\n            <input\r\n              className=\"hidden\"\r\n              type=\"text\"\r\n              name=\"entry.1626627283\"\r\n              value={user.email}\r\n              readOnly\r\n            />\r\n\r\n            <div className=\"button\">\r\n              <StyledButton type=\"submit\">SUBMIT</StyledButton>\r\n            </div>\r\n\r\n            <div className=\"submitted-status\">{formSubmitted}</div>\r\n          </form>\r\n        </StyledForm>\r\n      )}\r\n    </StyledAddRecord>\r\n  );\r\n};\r\n\r\nexport default AddRecord;\r\n\r\nconst StyledAddRecord = styled.div`\r\n  .button {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst FormStatus = styled.p`\r\n  text-align: center;\r\n  color: ${(props) => props.theme.fontColor2};\r\n`;\r\n"],"sourceRoot":""}